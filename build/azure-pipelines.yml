# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

# Only the name (i.e. Build.BuildNumber) can use "Rev:r", so use it for our version number.
name: '1.1.$(Rev:r)'

variables:
  versionNumber: '$(Build.BuildNumber)'
  prereleaseVersionNumber: 'Set dynamically below in a task'
  moduleName: AzureArtifactsPowerShellModuleHelper
  moduleDirectoryPath: '$(System.DefaultWorkingDirectory)\src\$(moduleName)'
  publishDirectoryPath: '$(Build.ArtifactStagingDirectory)\Modules'
  azureArtifactsFeedUrlForIntegrationTests: 'https://pkgs.dev.azure.com/iqmetrix/_packaging/iqmetrix/nuget/v2'

steps:
- task: PowerShell@2
  displayName: Set the prereleaseVersionNumber variable value
  inputs:
    targetType: 'inline'
    script: |
      [string] $dateTime = (Get-Date -Format 'yyyyMMddTHHmmss')
      Write-Host "##vso[task.setvariable variable=prereleaseVersionNumber]$(versionNumber)-ci$dateTime"

# - task: Pester@8
#   displayName: Run Pester PowerShell integration tests
#   inputs:
#     scriptFolder: '@{ Path = ''$(System.DefaultWorkingDirectory)\src\AzureArtifactsPowerShellModuleHelper\AzureArtifactsPowerShellModuleHelper.IntegrationTests.ps1''; Parameters = @{ AzureArtifactsPersonalAccessToken = ''$(AzureArtifactsPersonalAccessToken)'' }}'
#     resultsFile: '$(System.DefaultWorkingDirectory)\Test-Pester.XML'
#     run32Bit: False

- task: VersionPowerShellModule@2
  displayName: Version the PowerShell module manifests with the stable version number
  inputs:
    Path: '$(Build.SourcesDirectory)'
    VersionNumber: '$(versionNumber)'
    InjectVersion: true

- task: CopyFiles@2
  displayName: Copy the stable module files to the publish location
  inputs:
    SourceFolder: '$(moduleDirectoryPath)'
    Contents: '**'
    TargetFolder: '$(publishDirectoryPath)\Stable\$(moduleName)'

- task: VersionPowerShellModule@2
  displayName: Version the PowerShell module manifests with the prerelease version number
  inputs:
    Path: '$(Build.SourcesDirectory)'
    VersionNumber: '$(prereleaseVersionNumber)'
    InjectVersion: true

- task: CopyFiles@2
  displayName: Copy the prerelease module files to the publish location
  inputs:
    SourceFolder: '$(moduleDirectoryPath)'
    Contents: '**'
    TargetFolder: '$(publishDirectoryPath)\Prerelease\$(moduleName)'

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
